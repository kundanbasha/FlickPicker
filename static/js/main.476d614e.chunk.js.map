{"version":3,"sources":["redux/Movies/types.js","redux/Movies/reducer.js","redux/MovieDetails/types.js","redux/MovieDetails/reducer.js","redux/rootReducer.js","redux/request.js","global-constants.js","redux/Movies/actions.js","redux/Movies/saga.js","redux/MovieDetails/actions.js","redux/MovieDetails/saga.js","redux/rootSaga.js","redux/configureStore.js","components/Flex/index.jsx","components/Title/index.js","components/PrimaryText/index.jsx","utils/device.js","containers/MovieDetails/movie-styled-components.js","containers/MovieDetails/index.jsx","components/NoPage/index.jsx","containers/Movies/movie-styled-components.js","containers/Movies/Movie.jsx","components/Header/index.jsx","containers/Movies/movies-styled-components.js","containers/Movies/index.jsx","App.js","serviceWorker.js","index.js"],"names":["FETCH_MOVIES","INIT_STATE","isLoaded","movies","gotError","errorMessage","page","moviesReducer","state","action","type","p","error","FETCH_MOVIE_DETAILS","movie","movieDetailsReducer","rootReducer","combineReducers","request","method","endpoint","options","api","axios","get","params","fetchMovies","moviesFetched","fetchMoviesFail","fetchMoviesSaga","call","response","status","put","data","code","message","takeLatest","movieDetailsFetched","fetchMovieDetailsFail","fetchMovieDetails","id","_sagas","moviesSaga","movieDetailsSaga","all","map","unary","fork","configureStore","middlewares","sagaMiddleware","createSagaMiddleware","push","logger","store","createStore","applyMiddleware","runSaga","run","rootSaga","Flex","styled","div","props","column","mt","mr","mb","ml","pt","pr","pb","pl","StyledTitle","h2","StyledPrimaryText","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","Wrap","poster","Content","Overview","window","innerWidth","Title","PrimaryText","color","weight","BackButton","Row","innerHeight","Column","MoreInfo","React","memo","match","history","dispatch","useDispatch","movieDetails","useSelector","useEffect","poster_path","onClick","title","vote_average","release_date","split","runtime","overview","gen","genres","console","log","JSON","stringify","parse","replace","genre","key","name","getGenres","vote_count","NoPage","PosterWrap","Poster","img","Details","ReleaseDate","withRouter","original_title","_id","src","Header","MarginWrap","Movies","context","_loadMoreCells","stopIndex","fetchMoviesAction","length","_isRowLoaded","index","_resetList","ROW_HEIGHTS","list","forEach","datum","Math","floor","random","_cache","clearAll","_resetCellPositioner","_masonry","clearCellPositions","_columnCount","_renderInfiniteLoaderRef","CellMeasurerCache","defaultHeight","defaultWidth","fixedWidth","columnWidth","height","gutterSize","overscanByPixels","windowScrollerEnabled","hasMore","_cellRenderer","bind","_onResize","_renderAutoSizer","_renderMasonry","_setMasonryRef","this","prevProps","prevState","prevMovieList","_calculateColumnCount","recomputeCellPositions","child","_width","parent","style","cache","className","width","Fragment","_cellPositioner","createMasonryCellPositioner","cellMeasurerCache","columnCount","spacer","scrollTop","_height","_scrollTop","disableHeight","onResize","_initCellPositioner","autoHeight","cellCount","onCellsRendered","cellPositioner","cellRenderer","ref","reset","Component","connect","bindActionCreators","App","basename","process","path","component","exact","MovieDetails","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.476d614e.chunk.js","sourcesContent":["export const FETCH_MOVIES = \"FETCH_MOVIES\";\nexport const MOVIES_FETCHED = \"MOVIES_FETCHED\";\nexport const FETCH_MOVIES_FAIL = \"FETCH_MOVIES_FAIL\";\n","import { FETCH_MOVIES, MOVIES_FETCHED, FETCH_MOVIES_FAIL } from \"./types\";\n\nconst INIT_STATE = {\n  isLoaded: true,\n  movies: [],\n  gotError: false,\n  errorMessage: \"\",\n  page: 1\n};\n\nconst moviesReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case FETCH_MOVIES:\n      return {\n        ...state,\n        isLoaded: false,\n        gotError: false,\n        movies: action.page.p == 1 ? [] : state.movies,\n        page: action.page.p\n      };\n    case MOVIES_FETCHED:\n      return {\n        ...state,\n        movies: [...state.movies, ...action.movies],\n        isLoaded: true\n      };\n    case FETCH_MOVIES_FAIL:\n      return {\n        ...state,\n        isLoaded: true,\n        gotError: true,\n        errorMessage: action.error\n      };\n    default:\n      return state;\n  }\n};\n\nexport default moviesReducer;\n","export const FETCH_MOVIE_DETAILS = \"FETCH_MOVIE_DETAILS\";\nexport const MOVIE_DETAILS_FETCHED = \"MOVIE_DETAILS_FETCHED\";\nexport const FETCH_MOVIE_DETAILS_FAIL = \"FETCH_MOVIE_DETAILS_FAIL\";\n","import {\n  FETCH_MOVIE_DETAILS,\n  MOVIE_DETAILS_FETCHED,\n  FETCH_MOVIE_DETAILS_FAIL\n} from \"./types\";\n\nconst INIT_STATE = {\n  isLoaded: true,\n  movie: [],\n  gotError: false,\n  errorMessage: \"\"\n};\n\nconst movieDetailsReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case FETCH_MOVIE_DETAILS:\n      return { ...state, isLoaded: false, gotError: false };\n    case MOVIE_DETAILS_FETCHED:\n      return { ...state, movie: action.movie, isLoaded: true };\n    case FETCH_MOVIE_DETAILS_FAIL:\n      return {\n        ...state,\n        isLoaded: true,\n        gotError: true,\n        errorMessage: action.error\n      };\n    default:\n      return state;\n  }\n};\n\nexport default movieDetailsReducer;\n","import { combineReducers } from \"redux\";\n\nimport moviesReducer from \"./Movies/reducer\";\nimport movieDetailsReducer from \"./MovieDetails/reducer\";\n\nconst rootReducer = combineReducers({\n  moviesReducer,\n  movieDetailsReducer\n});\n\nexport default rootReducer;\n","import axios from \"axios\";\n\nimport { API_URL } from \"../global-constants\";\n\nconst request = (method, endpoint, options) => {\n  const api = `${API_URL}${endpoint}`;\n  switch (method) {\n    case \"POST\":\n      return axios.get(api, options);\n    default:\n      return axios.get(api, { params: options });\n  }\n};\n\nexport default request;\n","export const API_URL = \"https://akrp-server.herokuapp.com/movies\";\n","import { FETCH_MOVIES, MOVIES_FETCHED, FETCH_MOVIES_FAIL } from \"./types\";\n\nexport const fetchMovies = page => {\n  return {\n    type: FETCH_MOVIES,\n    page\n  };\n};\n\nexport const moviesFetched = movies => {\n  return {\n    type: MOVIES_FETCHED,\n    movies\n  };\n};\n\nexport const fetchMoviesFail = error => {\n  return {\n    type: FETCH_MOVIES_FAIL,\n    error\n  };\n};\n","import { put, call, takeLatest } from \"redux-saga/effects\";\n\nimport request from \"../request\";\nimport { FETCH_MOVIES } from \"./types\";\nimport { moviesFetched, fetchMoviesFail } from \"./actions\";\n\nfunction* fetchMoviesSaga(action) {\n  try {\n    const response = yield call(request, \"GET\", \"\", action.page);\n    if (response.status === 200) {\n      yield put(moviesFetched(response.data));\n    } else\n      yield fetchMoviesFail({ code: 500, message: \"Something went wrong\" });\n  } catch (error) {\n    yield fetchMoviesFail({ code: 500, message: \"Something went wrong\" });\n  }\n}\n\nexport default function*() {\n  yield takeLatest(FETCH_MOVIES, fetchMoviesSaga);\n}\n","import {\n  FETCH_MOVIE_DETAILS,\n  MOVIE_DETAILS_FETCHED,\n  FETCH_MOVIE_DETAILS_FAIL\n} from \"./types\";\n\nexport const fetchMovieDetails = id => {\n  return {\n    type: FETCH_MOVIE_DETAILS,\n    id\n  };\n};\n\nexport const movieDetailsFetched = movie => {\n  return {\n    type: MOVIE_DETAILS_FETCHED,\n    movie\n  };\n};\n\nexport const fetchMovieDetailsFail = error => {\n  return {\n    type: FETCH_MOVIE_DETAILS_FAIL,\n    error\n  };\n};\n","import { call, put, takeLatest } from \"redux-saga/effects\";\n\nimport request from \"../request\";\nimport { movieDetailsFetched, fetchMovieDetailsFail } from \"./actions\";\nimport { FETCH_MOVIE_DETAILS } from \"./types\";\nimport movieArray from \"./movie\";\n\nfunction* fetchMovieDetails(action) {\n  try {\n    const response = yield call(request, \"GET\", `/${action.id}`);\n    if (response.status === 200) {\n      const movie = response.data[0];\n      yield put(movieDetailsFetched(movie));\n    }\n  } catch (error) {\n    yield put(fetchMovieDetailsFail(\"Something went wrong\"));\n  }\n}\n\nexport default function*() {\n  yield takeLatest(FETCH_MOVIE_DETAILS, fetchMovieDetails);\n}\n","import { fork, all } from \"redux-saga/effects\";\nimport { map, unary } from \"lodash/fp\";\n\nimport moviesSaga from \"./Movies/saga\";\nimport movieDetailsSaga from \"./MovieDetails/saga\";\n\nexport default function*() {\n  const _sagas = [moviesSaga, movieDetailsSaga];\n\n  yield all(map(unary(fork), _sagas));\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\n\nconst configureStore = () => {\n  const middlewares = [];\n  let sagaMiddleware = createSagaMiddleware();\n\n  middlewares.push(sagaMiddleware);\n  if (process.env.NODE_ENV !== \"production\") {\n    middlewares.push(logger);\n  }\n\n  middlewares.push(logger);\n  const store = createStore(rootReducer, applyMiddleware(...middlewares));\n  store.runSaga = sagaMiddleware.run;\n\n  store.runSaga(rootSaga);\n\n  return store;\n};\n\nexport default configureStore;\n","import styled from \"styled-components\";\n\nconst Flex = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.column ? \"column\" : \"row\")};\n  margin-top: ${props => (props.mt ? props.mt + \"rem\" : \"0rem\")};\n  margin-right: ${props => (props.mr ? props.mr + \"rem\" : \"0rem\")};\n  margin-bottom: ${props => (props.mb ? props.mb + \"rem\" : \"0rem\")};\n  margin-left: ${props => (props.ml ? props.ml + \"rem\" : \"0rem\")};\n  padding-top: ${props => (props.pt ? props.pt + \"rem\" : \"0rem\")};\n  padding-right: ${props => (props.pr ? props.pr + \"rem\" : \"0rem\")};\n  padding-bottom: ${props => (props.pb ? props.pb + \"rem\" : \"0rem\")};\n  padding-left: ${props => (props.pl ? props.pl + \"rem\" : \"0rem\")};\n`;\n\nexport default Flex;\n","import styled from \"styled-components\";\n\nconst StyledTitle = styled.h2`\n  font-size: 1rem;\n  text-align: center;\n  margin-top: ${props => (props.mt ? props.mt + \"rem\" : \"0rem\")};\n  margin-right: ${props => (props.mr ? props.mr + \"rem\" : \"0rem\")};\n  margin-bottom: ${props => (props.mb ? props.mb + \"rem\" : \"0rem\")};\n  margin-left: ${props => (props.ml ? props.ml + \"rem\" : \"0rem\")};\n  padding-top: ${props => (props.pt ? props.pt + \"rem\" : \"0rem\")};\n  padding-right: ${props => (props.pr ? props.pr + \"rem\" : \"0rem\")};\n  padding-bottom: ${props => (props.pb ? props.pb + \"rem\" : \"0rem\")};\n  padding-left: ${props => (props.pl ? props.pl + \"rem\" : \"0rem\")};\n`;\n\nexport default StyledTitle;\n","import styled from \"styled-components\";\n\nconst StyledPrimaryText = styled.p`\n  font-size: 1rem;\n  margin-top: ${props => (props.mt ? props.mt + \"rem\" : \"0rem\")};\n  margin-right: ${props => (props.mr ? props.mr + \"rem\" : \"0rem\")};\n  margin-bottom: ${props => (props.mb ? props.mb + \"rem\" : \"0rem\")};\n  margin-left: ${props => (props.ml ? props.ml + \"rem\" : \"0rem\")};\n  padding-top: ${props => (props.pt ? props.pt + \"rem\" : \"0rem\")};\n  padding-right: ${props => (props.pr ? props.pr + \"rem\" : \"0rem\")};\n  padding-bottom: ${props => (props.pb ? props.pb + \"rem\" : \"0rem\")};\n  padding-left: ${props => (props.pl ? props.pl + \"rem\" : \"0rem\")};\n`;\n\nexport default StyledPrimaryText;\n","const size = {\n  mobileS: \"320px\",\n  mobileM: \"375px\",\n  mobileL: \"425px\",\n  tablet: \"768px\",\n  laptop: \"1024px\",\n  laptopL: \"1440px\",\n  desktop: \"2560px\"\n};\n\nconst device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n  desktopL: `(min-width: ${size.desktop})`\n};\n\nexport default device;\n","import styled from \"styled-components\";\nimport Flex from \"../../components/Flex\";\nimport StyledTitle from \"../../components/Title\";\nimport StyledPrimaryText from \"../../components/PrimaryText\";\nimport device from \"../../utils/device\";\n\nexport const Wrap = styled(Flex)`\n  background-color: #141414;\n  background-image: url(https://image.tmdb.org/t/p/original${props => props.poster});\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: start;\n  height: 100vh;\n  overflow: auto;\n`;\n\nexport const Content = styled(Flex)`\n  background: rgba(20, 20, 20, 0.8);\n  position: absolute;\n  padding-top: 3rem;\n  padding-right: 1rem;\n  height: 100vh;\n  overflow: auto;\n\n  @media ${device.mobileL} {\n    background: linear-gradient(\n      to right,\n      #141414 40%,\n      rgba(20, 20, 20, 0.9) 76%,\n      rgba(20, 20, 20, 0.6) 88%,\n      rgba(20, 20, 20, 0)\n    );\n  }\n`;\n\nexport const Overview = styled(StyledPrimaryText)`\n  max-width: 100%;\n  color: #999;\n  line-height: 1.5;\n  @media ${device.mobileL} {\n    max-width: ${window.innerWidth / 2}px;\n  }\n`;\n\nexport const Title = styled(StyledTitle)`\n  color: white;\n  text-align: left;\n  text-transform: uppercase;\n  font-size: 2rem;\n  margin: 1.5rem 1.5rem 0rem 1.5rem;\n`;\n\nexport const PrimaryText = styled(StyledPrimaryText)`\n  color: ${props => (props.color ? props.color : \"#999\")};\n  font-weight: ${props => (props.weight ? props.weight : \"normal\")};\n  line-height: 1.35;\n`;\n\nexport const BackButton = styled(Flex)`\n  position: absolute;\n  align-items: center;\n  padding-left: 1.5rem;\n  cursor: pointer;\n  z-index: 1;\n  width: 100%;\n  height: 64px;\n  background: rgba(20, 20, 20);\n\n  @media ${device.mobileL} {\n    background: transparent;\n  }\n`;\n\nexport const Poster = styled(Flex)`\n  background-image: url(https://image.tmdb.org/t/p/original${props => props.poster});\n  background-repeat: no-repeat;\n  background-size: zoom;\n  background-position: center;\n  height: ${window.innerHeight - 200}px;\n`;\n\nexport const Row = styled(Flex)`\n  margin: 1.5rem 1.5rem 0rem 1.5rem;\n  margin-top: ${props => (props.mt ? props.mt : \"inherit\")};\n`;\n\nexport const Column = styled(Flex)`\n  margin-left: 0rem;\n\n  @media ${device.mobileL} {\n    margin-left: ${props => (props.ml ? props.ml + \"rem\" : \"inherit\")};\n  }\n`;\n\nexport const MoreInfo = styled(Flex)`\n  padding: 1.5rem;\n  flex-direction: column;\n\n  @media ${device.mobileL} {\n    flex-direction: row;\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaArrowLeft } from \"react-icons/fa\";\n\nimport {\n  Wrap,\n  Title,\n  PrimaryText,\n  Row,\n  MoreInfo,\n  Column,\n  Poster,\n  Overview,\n  Content,\n  BackButton\n} from \"./movie-styled-components\";\nimport { fetchMovieDetails } from \"../../redux/MovieDetails/actions\";\nimport Flex from \"../../components/Flex\";\n\nconst MovieDetails = ({ match, history }) => {\n  const dispatch = useDispatch();\n  const movieDetails = useSelector(state => state.movieDetailsReducer);\n  const { movie, isLoaded } = movieDetails;\n\n  useEffect(() => {\n    dispatch(fetchMovieDetails(match.params.id));\n  }, []);\n\n  const getGenres = gen => {\n    let genres = [];\n    if (gen) {\n      console.log(\"check genres\", JSON.stringify(gen));\n      genres = JSON.parse(gen.replace(/\\'/g, '\"')).map(genre => (\n        <PrimaryText key={genre.id} color=\"#fff\">\n          {genre.name}\n        </PrimaryText>\n      ));\n    }\n    return genres;\n  };\n\n  if (isLoaded)\n    return (\n      <Wrap column poster={movie.poster_path}>\n        <BackButton onClick={() => history.push(\"/movies\")}>\n          <FaArrowLeft color=\"#fff\" />\n        </BackButton>\n        {/* <Poster poster={movie.poster_path}></Poster> */}\n        {/* <img\n          src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n          height={\"600px\"}\n        /> */}\n        <Content column>\n          <Title>{movie.title}</Title>\n          <Row mt=\"0.5\">\n            <PrimaryText color=\"#46D369\" weight={600}>\n              {movie.vote_average}\n            </PrimaryText>\n            <PrimaryText ml=\"1.5\" color=\"#fff\" weight={600}>\n              {movie.release_date && movie.release_date.split(\"-\")[0]}\n            </PrimaryText>\n            <PrimaryText ml=\"1.5\" color=\"#fff\" weight={600}>\n              {movie.runtime + \"m\"}\n            </PrimaryText>\n          </Row>\n          <Overview mt=\"1.5\" ml=\"1.5\" mr=\"1.5\">\n            {movie.overview}\n          </Overview>\n          <MoreInfo>\n            <Column column>\n              <Flex column mb=\"1.5\">\n                <PrimaryText>{\"Release Date\"}</PrimaryText>\n                <PrimaryText color=\"#fff\">{movie.release_date}</PrimaryText>\n              </Flex>\n              <Flex column mb=\"1.5\">\n                <PrimaryText>{\"Cast\"}</PrimaryText>\n                <PrimaryText color=\"#fff\">{\"Iron Man\"}</PrimaryText>\n                <PrimaryText color=\"#fff\">{\"Thor\"}</PrimaryText>\n                <PrimaryText color=\"#fff\">{\"Hulk\"}</PrimaryText>\n                <PrimaryText color=\"#fff\">{\"Spiderman\"}</PrimaryText>\n              </Flex>\n              <Flex column mb=\"1.5\">\n                <PrimaryText>{\"Writers\"}</PrimaryText>\n                <PrimaryText color=\"#fff\">{\"Christopher Nolan\"}</PrimaryText>\n                <PrimaryText color=\"#fff\">{\"James Cameron\"}</PrimaryText>\n              </Flex>\n            </Column>\n            <Column column ml=\"8\">\n              <Flex column mb=\"1.5\">\n                <PrimaryText>{\"Genres\"}</PrimaryText>\n                {getGenres(movie.genres)}\n              </Flex>\n              <Flex column mb=\"1.5\">\n                <PrimaryText>{\"Type\"}</PrimaryText>\n                <PrimaryText color=\"#fff\">{\"Action\"}</PrimaryText>\n              </Flex>\n            </Column>\n            <Column column ml=\"8\">\n              <Flex column mb=\"1.5\">\n                <PrimaryText>{\"Vote Count\"}</PrimaryText>\n                <PrimaryText color=\"#fff\">{movie.vote_count}</PrimaryText>\n              </Flex>\n              <Flex column mb=\"1.5\">\n                <PrimaryText>{\"Maturity Ratings\"}</PrimaryText>\n                <PrimaryText color=\"#fff\">{\"13+\"}</PrimaryText>\n              </Flex>\n            </Column>\n          </MoreInfo>\n        </Content>\n      </Wrap>\n    );\n\n  return <div>loading component....</div>;\n};\n\nexport default React.memo(MovieDetails);\n\n{\n  /* <Row mt=\"0.5\">\n          <PrimaryText>Starring:</PrimaryText>\n          <PrimaryText>Alam, basha, arshad, asif</PrimaryText>\n        </Row>\n        <Row>\n          <PrimaryText>Genres:</PrimaryText>\n          <PrimaryText>Alam, basha, arshad, asif</PrimaryText>\n        </Row> */\n}\n","import React from \"react\";\n\nconst NoPage = () => <div>No page available with this router</div>;\n\nexport default NoPage;\n","import styled from \"styled-components\";\nimport Flex from \"../../components/Flex\";\nimport StyledTitle from \"../../components/Title\";\n\nexport const Wrap = styled(Flex)`\n  height: 300px;\n  width: 100%;\n  display: flex;\n  overflow: hidden;\n  cursor: pointer;\n  trasition: transform 1s ease-out;\n\n  &:hover {\n    transform: scale(1.15);\n    z-index: 1;\n  }\n`;\n\nexport const PosterWrap = styled(Flex)`\n  height: 230px;\n`;\n\nexport const Poster = styled.img`\n  height: 100%;\n  width: 100%;\n`;\n\nexport const Details = styled(Flex)`\n  align-items: flex-start;\n  height: 70px;\n`;\n\nexport const Title = styled(StyledTitle)`\n  font-size: 0.8rem;\n  font-weight: 600;\n  text-align: left;\n  color: white;\n  line-height: 1.5;\n`;\n\nexport const ReleaseDate = styled.p`\n  font-size: 0.725rem;\n  color: rgba(255, 255, 255, 0.65);\n  line-height: 1.5;\n`;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport {\n  Wrap,\n  Title,\n  Poster,\n  ReleaseDate,\n  PosterWrap,\n  Details\n} from \"./movie-styled-components\";\n\nconst Movie = props => {\n  const { original_title, release_date, poster_path, _id, history } = props;\n\n  return (\n    <Wrap column onClick={() => history.push(`/movies/${_id}`)}>\n      <PosterWrap>\n        <Poster src={`https://image.tmdb.org/t/p/original${poster_path}`} />\n      </PosterWrap>\n      <Details column>\n        <Title>{original_title}</Title>\n        <ReleaseDate>{release_date}</ReleaseDate>\n      </Details>\n    </Wrap>\n  );\n};\n\nexport default withRouter(Movie);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Flex from \"../Flex\";\nimport StyledTitle from \"../Title\";\nimport device from \"../../utils/device\";\n\nconst Wrap = styled(Flex)`\n  background: #242424;\n  height: 64px;\n  margin-bottom: 12px;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Title = styled(StyledTitle)`\n  font-size: 1.5rem;\n  padding-left: 1.25rem;\n  color: #fff;\n\n  @media ${device.mobileL} {\n    padding-left: 1.85rem;\n  }\n`;\n\nconst Header = () => (\n  <Wrap>\n    <Title>Flick Picker</Title>\n  </Wrap>\n);\n\nexport default Header;\n","import styled from \"styled-components\";\nimport Flex from \"../../components/Flex\";\nimport device from \"../../utils/device\";\n\nexport const Wrap = styled(Flex)`\n  background-color: #141414;\n`;\n\nexport const MarginWrap = styled(Flex)`\n  margin-left: 0.725rem;\n\n  @media ${device.mobileL} {\n    margin-left: 1.5rem;\n  }\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  WindowScroller,\n  createMasonryCellPositioner,\n  Masonry\n} from \"react-virtualized\";\n\nimport Movie from \"./Movie\";\nimport Header from \"../../components/Header\";\nimport { Wrap, MarginWrap } from \"./movies-styled-components\";\n\nimport { fetchMovies } from \"../../redux/Movies/actions\";\n\nclass Movies extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this._columnCount = 0;\n    this._renderInfiniteLoaderRef = null;\n\n    this._cache = new CellMeasurerCache({\n      defaultHeight: 250,\n      defaultWidth: 190,\n      fixedWidth: true\n    });\n\n    this.state = {\n      columnWidth: 190,\n      height: window.innerHeight - 76,\n      gutterSize: 10,\n      overscanByPixels: 0,\n      windowScrollerEnabled: false,\n      hasMore: true\n    };\n\n    this._cellRenderer = this._cellRenderer.bind(this);\n    this._onResize = this._onResize.bind(this);\n    this._renderAutoSizer = this._renderAutoSizer.bind(this);\n    this._renderMasonry = this._renderMasonry.bind(this);\n    this._setMasonryRef = this._setMasonryRef.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetchMoviesAction } = this.props;\n    fetchMoviesAction({ p: 1 });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevMovieList = prevProps.movies;\n    const updatedMovieList = this.props.movies;\n\n    if (prevMovieList !== updatedMovieList) {\n      const index = prevMovieList.length;\n      this._calculateColumnCount();\n      this._resetCellPositioner();\n      this._masonry.recomputeCellPositions();\n    }\n  }\n\n  _loadMoreCells = data => {\n    const { stopIndex } = data;\n    const { movies, fetchMoviesAction, page } = this.props;\n    const lastHalf = page * 42 - 24;\n    if (stopIndex > lastHalf && stopIndex <= movies.length) {\n      fetchMoviesAction({ p: page + 1 });\n    }\n  };\n\n  render() {\n    const {\n      columnWidth,\n      height,\n      gutterSize,\n      overscanByPixels,\n      windowScrollerEnabled\n    } = this.state;\n\n    let child;\n\n    if (windowScrollerEnabled) {\n      child = (\n        <WindowScroller overscanByPixels={overscanByPixels}>\n          {this._renderAutoSizer}\n        </WindowScroller>\n      );\n    } else {\n      child = this._renderAutoSizer({ height });\n    }\n\n    return (\n      <Wrap column>\n        <Header />\n        <Wrap>\n          <MarginWrap />\n          {child}\n        </Wrap>\n      </Wrap>\n    );\n  }\n\n  _calculateColumnCount() {\n    const { columnWidth, gutterSize } = this.state;\n\n    this._columnCount = Math.floor(this._width / (columnWidth + gutterSize));\n  }\n\n  _isRowLoaded = ({ index }) => {\n    return !!this.props.movies[index];\n  };\n\n  _cellRenderer({ index, key, parent, style }) {\n    const { columnWidth } = this.state;\n    const { movies } = this.props;\n\n    const movie = movies[index];\n\n    return (\n      <CellMeasurer cache={this._cache} index={index} key={key} parent={parent}>\n        <div\n          className={\"Cell\"}\n          style={{\n            ...style,\n            width: columnWidth,\n            height: 300\n          }}\n        >\n          {movie ? (\n            <React.Fragment>\n              <Movie key={movie._id} index={index} {...movie} />\n            </React.Fragment>\n          ) : (\n            <div\n              style={{\n                height: \"300px\",\n                width: \"100%\"\n              }}\n            >\n              loading.........\n            </div>\n          )}\n        </div>\n      </CellMeasurer>\n    );\n  }\n\n  _initCellPositioner() {\n    if (typeof this._cellPositioner === \"undefined\") {\n      const { columnWidth, gutterSize } = this.state;\n\n      this._cellPositioner = createMasonryCellPositioner({\n        cellMeasurerCache: this._cache,\n        columnCount: this._columnCount,\n        columnWidth,\n        spacer: gutterSize\n      });\n    }\n  }\n\n  _onResize({ width }) {\n    this._width = width;\n\n    this._calculateColumnCount();\n    this._resetCellPositioner();\n    this._masonry.recomputeCellPositions();\n  }\n\n  _renderAutoSizer({ height, scrollTop }) {\n    this._height = height;\n    this._scrollTop = scrollTop;\n\n    const { overscanByPixels } = this.state;\n\n    return (\n      <AutoSizer\n        disableHeight\n        height={height}\n        onResize={this._onResize}\n        overscanByPixels={overscanByPixels}\n        scrollTop={this._scrollTop}\n      >\n        {this._renderMasonry}\n      </AutoSizer>\n    );\n  }\n\n  _renderMasonry({ width }) {\n    const { movies } = this.props;\n    this._width = width;\n\n    this._calculateColumnCount();\n    this._initCellPositioner();\n\n    const { height, overscanByPixels, windowScrollerEnabled } = this.state;\n\n    return (\n      <Masonry\n        autoHeight={windowScrollerEnabled}\n        cellCount={movies.length || 1000000}\n        onCellsRendered={data => this._loadMoreCells(data)}\n        cellMeasurerCache={this._cache}\n        cellPositioner={this._cellPositioner}\n        cellRenderer={this._cellRenderer}\n        height={windowScrollerEnabled ? this._height : height}\n        overscanByPixels={overscanByPixels}\n        ref={this._setMasonryRef}\n        scrollTop={this._scrollTop}\n        width={width - 24}\n      />\n    );\n  }\n\n  _resetList = () => {\n    const ROW_HEIGHTS = [25, 50, 75, 100];\n\n    const { list } = this.context;\n    list.forEach(datum => {\n      datum.size = ROW_HEIGHTS[Math.floor(Math.random() * ROW_HEIGHTS.length)];\n    });\n\n    this._cache.clearAll();\n    this._resetCellPositioner();\n    this._masonry.clearCellPositions();\n  };\n\n  _resetCellPositioner() {\n    const { columnWidth, gutterSize } = this.state;\n\n    this._cellPositioner.reset({\n      columnCount: this._columnCount,\n      columnWidth,\n      spacer: gutterSize\n    });\n  }\n\n  _setMasonryRef(ref) {\n    this._masonry = ref;\n  }\n}\n\nconst mapStatetoProps = ({ moviesReducer }) => {\n  const { movies, isLoaded, page } = moviesReducer;\n\n  return { movies, isLoaded, page };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchMoviesAction: bindActionCreators(fetchMovies, dispatch)\n  };\n}\nexport default connect(mapStatetoProps, mapDispatchToProps)(Movies);\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./App.css\";\n\nimport configureStore from \"./redux/configureStore\";\nimport MovieDetails from \"./containers/MovieDetails\";\nimport NoPage from \"./components/NoPage\";\nimport Movies from \"./containers/Movies\";\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route\n            path={process.env.PUBLIC_URL + \"/\"}\n            component={Movies}\n            exact={true}\n          />\n          <Route\n            path={process.env.PUBLIC_URL + \"/movies\"}\n            component={Movies}\n            exact={true}\n          />\n          <Route\n            path={process.env.PUBLIC_URL + \"/movies/:id\"}\n            component={MovieDetails}\n          />\n          <Route path={process.env.PUBLIC_URL + \"*\"} component={NoPage} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}